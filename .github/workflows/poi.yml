name: POI CI/CD

on:
  workflow_dispatch: 
  push:
    branches: [ main ]
    paths: 
      - apis/poi/**
      - .github/workflows/poi.yml
  pull_request:
    branches: [ main ]

env: 
  poi_path: apis/poi/**
  repository: devopsoh/api-poi
  docker_path: apis/poi/web/**
    
jobs:
  build-test:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Install Dependencies 
      run: dotnet restore apis/poi/web/*.csproj
      
#     - name: Restore dependencies
#       run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore apis/poi/web/*.csproj
      
    - name: Test
      run: dotnet test --no-build --verbosity normal apis/poi/tests/UnitTests
      
      #### THIS IS OPTIONAL BUT GOOD TO HAVE, CREATE AN ISSUE IF THE JOB FAILS ####
      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

  
  docker_build_push: 
  
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2.4.0
    
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username:  ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASSWORD }}
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
    
    ## Option ##
    # - name: Docker login     
    # run: docker login $registry -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUB_TOKEN }} 
 
    - run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/$repository:${{ github.sha }} $docker_path
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/$repository:${{ github.sha }} $docker_path
        
    #- name: Docker Build 
    #  run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

      
  
